.jac-secondary-navigation-list {
  > li {
    margin-bottom: spacing(3);
  }
}

.jac-secondary-navigation-link {
  padding: 0.1875rem spacing(2);
  margin-top: spacing(1);

  //   border: 4px solid red;
  width: 100%;
  line-height: 1.4;

  &.active {
    font-weight: 900;
    color: $primary;
  }

  &[href="#"] {
    cursor: pointer;
    pointer-events: none;
  }
}

.jac-secondary-navigation-link_two,
.jac-secondary-navigation-link_three {
  padding-left: 20px;
}

.jac-secondary-navigation {
  overflow-y: auto;
  max-height: calc(100vh - $site-header-height);

  // @include media-breakpoint-up(md) {
  //   position: sticky;
  //   top: 0;

  //   // Override collapse behaviors
  //   // stylelint-disable-next-line declaration-no-important
  //   display: block !important;

  //   // TODO: Maybe this calc is not the right one
  //   height: subtract(100vh, 7rem);

  //   // Prevent focus styles to be cut off:
  //   padding-left: 0.25rem;
  //   margin-left: -0.25rem;
  //   overflow-y: auto;
  // }

  ul {
    padding-left: 0;
    list-style: none;
  }

  ul ul ul {
    padding-left: spacing(3);
  }

  > ul {
    @include media-breakpoint-down(md) {
      padding: spacing(4) spacing(2);
      background-color: $gray-100;
      border-bottom: 1px solid $gray-200;
    }

    >li {
      display: grid;
      margin-bottom: spacing(3);

      >a,
      >.btn {
        font-weight: 600;
      }
    }
  }

  a,
  .btn {
    color: rgba($black, 0.65);
    background-color: transparent;
    text-decoration: none;
    text-align: start;

    &:hover,
    &:focus {
      color: rgba($black, 0.85);
      background-color: rgba($dark, 0.05);
    }
  }

  .btn {
    padding: spacing(1) spacing(2);
    margin-left: -0.15rem;
    border: 0;

    // &:focus {
    //   box-shadow: 0 0 0 1px rgba($bd-primary-bright, 0.7);
    // }

    &::before {
      margin-right: spacing(1);

      //   width: 1.25em;
      //   line-height: 0; // Align in the middle
      content: escape-svg($chevron-right);

      //   transform-origin: 0.5em 50%;
      //   transform: rotate(90deg);

      @include transition(transform 0.35s ease);
    }

    &[aria-expanded="true"] {
      color: rgba($black, 0.85);

      &::before {
        transform: rotate(90deg);
      }
    }
  }
}
